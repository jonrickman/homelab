version: "3"

services:
  mongo:
    build: ./db
    container_name: mongodb
    hostname: mongodb
    ports:
    - '27017:27017'
    volumes:
    - mongo-data:/data/db
    - ./db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: pass    
    networks:
    - homelab

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=adminpass
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data
    command: server /data
    restart: always
    networks:
      - homelab
    ports:
      - "8001:8001"

  # pokemon:
  #   build: ./pokemon
  #   container_name: pokemon
  #   hostname: pokemon
  #   ports:
  #     - "8001:8000"
  #   volumes:
  #   - ./pokemon/src/pokemon:/pokemon/src/pokemon
  #   networks:
  #   - homelab

  ytils:
    # image: python:3.11
    build:
      context: ./ytils/ytils
      dockerfile: Dockerfile
    hostname: ytils
    volumes:
      - ./ytils/ytils/app:/app
    env_file:
      - ./ytils/ytils/app/.env
    networks:
      - homelab
    restart: always
    ports:
      - "5001:5001"

  journal:
    build: ./journal
    container_name: journal
    hostname: journal
    ports:
      - "8000:8000"
    volumes:
    - ./journal/src/journal:/journal/src/journal
    networks:
    - homelab


  nginx:
    container_name: nginx
    build: ./nginx
    hostname: nginx
    ports:
    - "80:80"
    restart: always
    volumes:
      - ./nginx:/etc/nginx/conf.d
    networks:
    - homelab


volumes:
  mongo-data:

  minio_data:
    driver: local


networks:
  homelab:
    driver: bridge
